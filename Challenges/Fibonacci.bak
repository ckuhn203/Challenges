using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Numerics;

namespace Challenges
{
    class Fibonacci
    {

        private int ordinalPosition;
        public int OrdinalPosition 
        {
            get { return ordinalPosition; }
            set 
            {
                ordinalPosition = value;
                Calculate();
            }
        }
        public BigInteger Value { get; private set; }

        private void Calculate() 
        { 
            if (this.OrdinalPosition < 0)
            {
                throw new ArgumentOutOfRangeException("OrdinalPosition","Can't calculate Fn when n is less than zero.");
            }
            else if (this.OrdinalPosition == 0)
            {
                this.Value = 0;
            }
            else if (this.OrdinalPosition == 1 || this.OrdinalPosition == 2)
            {
                this.Value = 1;
            }
            else
            {
                //initialize previous results
                BigInteger previous1 = 1;
                BigInteger previous2 = 1;

                for (int i = 2; i < this.OrdinalPosition; i++ )
                {
                    this.Value = previous1 + previous2;
                    previous2 = previous1;
                    previous1 = this.Value;
                }
            }
        }

        //constructors
        public Fibonacci(int n)
        {
            this.OrdinalPosition = n;
        }

        public Fibonacci(){}

    }
}
